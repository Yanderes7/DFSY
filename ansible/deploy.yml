---
- name: 部署车辆管理系统
  hosts: "production"
  become: yes
  tasks:
    - name: 创建项目目录
      file:
        path: "/opt/vehicle-management-system"
        state: directory

    - name: 上传 JAR 文件
      copy:
        src: "/var/jenkins_home/workspace/vehicle-management-system/target/synu_xh-0.0.1-SNAPSHOT.jar"
        dest: "/opt/vehicle-management-system/synu_xh-0.0.1-SNAPSHOT.jar"

    - name: 停止旧服务
      shell: "pgrep -f 'java -jar /opt/vehicle-management-system/synu_xh-0.0.1-SNAPSHOT.jar' && pkill -f 'java -jar /opt/vehicle-management-system/synu_xh-0.0.1-SNAPSHOT.jar' || echo '旧服务未运行'"
      register: stop_service
      ignore_errors: true

    - name: 检查旧服务是否已停止
      shell: "pgrep -f 'java -jar /opt/vehicle-management-system/synu_xh-0.0.1-SNAPSHOT.jar'"
      register: service_status
      ignore_errors: true
      until: service_status.rc != 0
      retries: 3
      delay: 5


    - name: 启动服务
      shell: "nohup java -jar /opt/vehicle-management-system/synu_xh-0.0.1-SNAPSHOT.jar > /opt/vehicle-management-system/service.log 2>&1 &"
      async: 120  # 设置最大运行时间
      poll: 0     # 立即返回，不等待任务完成

    - name: 检查服务是否运行
      shell: "pgrep -f 'java -jar /opt/vehicle-management-system/synu_xh-0.0.1-SNAPSHOT.jar'"
      register: service_status
      failed_when: service_status.rc != 0  # 如果 rc 不等于 0，任务失败

    - name: 输出服务状态
      debug:
        msg: '服务已启动'

    - name: 确保服务启动成功
      fail:
        msg: "服务未启动，请检查日志文件：/opt/vehicle-management-system/service.log"
      when: service_status.rc != 0  # 如果 rc 不等于 0，任务失败





#    - name: 从 Git 拉取代码
#      git:
#        repo: "{{ git_repo }}"
#        dest: "/opt/vehicle-management-system"
#        version: "{{ git_branch }}"
#
#    - name: 构建项目
#      command: "mvn clean package"
#      args:
#        chdir: "/opt/vehicle-management-system"

#    - name: 启动服务
#      command: "echo 'java -jar /opt/vehicle-management-system/synu_xh-0.0.1-SNAPSHOT.jar > /opt/vehicle-management-system/service.log 2>&1' | at now"
##      args:
##        chdir: "/opt/vehicle-management-system"
#      become: no

#    - name: 启动服务
#      command: "nohup java -jar /opt/vehicle-management-system/synu_xh-0.0.1-SNAPSHOT.jar > /opt/vehicle-management-system/service.log 2>&1 &"
#      async: 120  # 设置最大运行时间
#      poll: 0     # 立即返回，不等待任务完成
#
#    - name: 检查服务是否运行
#      shell: "pgrep -f 'java -jar /opt/vehicle-management-system/synu_xh-0.0.1-SNAPSHOT.jar'"
#      register: service_status
#      ignore_errors: yes
#
#    - name: 输出服务状态
#      debug:
#        msg: '{{ "服务已启动" if service_status.rc == 0 && null else "服务未启动" }}'
